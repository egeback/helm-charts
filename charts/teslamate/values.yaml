#
# IMPORTANT NOTE
#
# This chart inherits from bjw-s common library chart. You can check the default values/options here:
# https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
#

controllers:
  main:
    containers:
      main:
        image:
          # -- image repository
          repository: teslamate/teslamate
          # -- image tag
          # @default -- chart.appVersion
          tag: "{{ .Chart.AppVersion }}"
          # -- image pull policy
          pullPolicy: IfNotPresent
          # -- environment variables. See [teslamate docs](https://docs.teslamate.org/docs/configuration/environment_variables) for more details.
          # @default -- See below
          env:
            # -- Set the container timezone
            TZ: UTC
            # -- Postgres database hostname
            DATABASE_HOST: '{{ include "bjw-s.common.lib.chart.names.fullname" .}}-postgresql'
            # -- Postgres database user name
            DATABASE_USER: '{{ "Values.postgresql.auth.username" | default "postgres" }}'
            # -- Postgres database password
            DATABASE_PASS: "{{ .Values.postgresql.auth.password }}"
            # -- Postgres database password
            DATABASE_NAME: "{{ .Values.postgresql.auth.database }}"
            # -- Disables the MQTT feature if `true`
            DISABLE_MQTT: "false"
            # -- MQTT server host
            MQTT_HOST: "mosquitto"
            # -- MQTT server port
            MQTT_PORT: 1883
            # -- MQTT username
            # MQTT_USERNAME:
            # -- MQTT password
            # MQTT_PASSWORD:
            # -- Teslamate encryption key
            ENCRYPTION_KEY: "MySuperSecretEncryptionKey"
      teslamateapi:
        enabled: false
        name: teslamateapi
        image:
          repository: tobiasehlert/teslamateapi
          tag: 1.18.2
        env:
          ENCRYPTION_KEY: "{{ .Values.controllers.main.containers.main.env.ENCRYPTION_KEY }}"
          DATABASE_USER: "{{ .Values.postgresql.auth.username }}"
          DATABASE_PASS: "{{ .Values.postgresql.auth.postgresPassword }}"
          DATABASE_NAME: "{{ .Values.postgresql.auth.database }}"
          DATABASE_HOST: "{{ .Values.controllers.main.containers.main.DATABASE_HOST }}"
          MQTT_HOST: "{{ .Values.controllers.main.containers.main.MQTT_HOST }}"
          # -- MQTT username
          # MQTT_USERNAME:
          # -- MQTT password
          # MQTT_PASSWORD:
          TZ: "{{ .Values.controllers.main.containers.main.env.TZ }}"
      teslamateagile:
        enabled: false
        image:
          repository: mattjeanes/teslamateagile
          tag: v1.15.0
        env:
          DATABASE_USER: "{{ .Values.postgresql.auth.username }}"
          DATABASE_PASS: "{{ .Values.postgresql.auth.postgresPassword }}"
          DATABASE_NAME: "{{ .Values.postgresql.auth.database }}"
          DATABASE_HOST: "{{ .Values.controllers.main.containers.main.env.DATABASE_HOST }}"
          TeslaMate__UpdateIntervalSeconds: 300
          TeslaMate__GeofenceId: 1
          TeslaMate__EnergyProvider: Tibber
          Tibber__AccessToken: MyAccessToken
          TeslaMate__FeePerKilowattHour: 0
          TZ: "{{ .Values.controllers.main.containers.main.env.TZ }}"
      teslamate-abrp:
        enabled: false
        image:
          repository: fetzu/teslamate-abrp
          tag: 3.0.4
        env:
          MQTT_SERVER: "{{ .Values.controllers.main.containers.main.env.MQTT_HOST }}"
          MQTT_PORT: '{{ .Values.controllers.main.containers.main.env.MQTT_PORT }}'
          MQTT_PASSWORD: '{{ .Values.controllers.main.containers.main.env.MQTT_PASSWORD }}'
          MQTT_USERNAME: '{{ .Values.controllers.main.containers.main.env.MQTT_USERNAME }}'
          CAR_NUMBER: 2
          CAR_MODEL: tesla:my:19:bt37:awd #Tesla Model Y Longrange https://api.iternio.com/1/tlm/get_carmodels_list
          USER_TOKEN: y0ur-4p1-k3y

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    controller: main
    ports:
      http:
        port: 4000
  teslamate-api:
    controller: main
    enabled: false
    controller: main
    ports:
      http2:
        port: 8080

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false
    hosts:
    - host: teslamate.example.com
      paths:
        - path: /
          pathType: Prefix
          service:
            name: main
            port: 4000

  # Add ingress for teslamate-api
  teslamate-api:
    enabled: false
    hosts:
      - host: teslamate-api.example.com
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: teslamate-api
              name: teslamate-api
              port: 8080

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  import:
    enabled: false
    mountPath: /opt/app/import

# -- Enable and configure postgresql database subchart under this key.
#    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
# @default -- See values.yaml
postgresql:
  enabled: false
  auth:
    postgresPassword: teslamate-pass
    password: teslamate-pass
    database: teslamate
    username: teslamate
  primary:
    persistence:
      enabled: false
